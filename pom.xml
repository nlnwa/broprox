<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>no.nb.nna</groupId>
    <artifactId>veidemann</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <organization>
        <name>National Library of Norway</name>
        <url>http://nb.no</url>
    </organization>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <modules>
        <module>veidemann-harvester</module>
        <module>veidemann-dbadapter</module>
        <module>veidemann-chrome</module>
        <module>veidemann-contentwriter</module>
        <module>veidemann-contentexplorer</module>
        <module>veidemann-frontier</module>
        <module>veidemann-integrationtests</module>
        <module>veidemann-controller</module>
        <module>veidemann-api</module>
        <module>veidemann-commons</module>
        <module>veidemann-dnsresolver</module>
        <module>veidemann-robotsevaluator</module>
        <module>veidemannctl</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <docker.tag>latest</docker.tag>

        <chrome.version>64.0.3282.24</chrome.version>
        <docker.java.image>openjdk:8u151-jdk-alpine</docker.java.image>

        <log4j.version>2.7</log4j.version>
        <org.jwat.version>1.0.4</org.jwat.version>
        <org.glassfish.jersey.version>2.25.1</org.glassfish.jersey.version>
        <org.apache.tika.version>1.14</org.apache.tika.version>
        <cache2k-version>1.0.0.CR4</cache2k-version>
        <io.opentracing.version>0.30.0</io.opentracing.version>
        <io.opentracing.brave.version>0.20.0</io.opentracing.brave.version>
        <com.uber.jaeger.version>0.21.0</com.uber.jaeger.version>
        <io.grpc.version>1.7.1</io.grpc.version>
        <io.grpc.protoc-gen-grpc-java.version>1.7.0</io.grpc.protoc-gen-grpc-java.version>
        <com.google.protobuf.protoc.version>3.4.0</com.google.protobuf.protoc.version>
        <io.zipkin.reporter.version>0.10.0</io.zipkin.reporter.version>
        <io.zipkin.brave.version>4.3.4</io.zipkin.brave.version>
        <antlr.version>4.7</antlr.version>
        <antlr4test-maven-plugin.version>1.8</antlr4test-maven-plugin.version>

        <!--Properties for golang-->
        <go.sdk.version>1.9.2</go.sdk.version>
        <go.wrapper.plugin.version>2.1.6</go.wrapper.plugin.version>
    </properties>

    <repositories>
        <repository>
            <id>oss.sonatype.org</id>
            <name>OSS Sonatype</name>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.netpreserve.commons</groupId>
                <artifactId>webarchive-commons-uri</artifactId>
                <version>2.0.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.netpreserve.commons</groupId>
                <artifactId>webarchive-commons-util</artifactId>
                <version>2.0.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.littleshoot</groupId>
                <artifactId>littleproxy</artifactId>
                <version>1.1.2</version>
            </dependency>
            <dependency>
                <groupId>net.lightbody.bmp</groupId>
                <artifactId>mitm</artifactId>
                <version>2.1.5</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>4.1.15.Final</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-tcnative-boringssl-static</artifactId>
                <version>2.0.6.Final</version>
                <classifier>linux-x86_64</classifier>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-io</artifactId>
                <version>1.3.2</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-common</artifactId>
                <version>${org.glassfish.jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-netty-http</artifactId>
                <version>${org.glassfish.jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-grizzly2-http</artifactId>
                <version>${org.glassfish.jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-multipart</artifactId>
                <version>${org.glassfish.jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                <artifactId>jersey-test-framework-provider-inmemory</artifactId>
                <version>${org.glassfish.jersey.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- gRPC libraries and tracing -->
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-api</artifactId>
                <version>${io.opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-noop</artifactId>
                <version>${io.opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-impl</artifactId>
                <version>${io.opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-util</artifactId>
                <version>${io.opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing.contrib</groupId>
                <artifactId>grpc-opentracing</artifactId>
                <version>0.2.0</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.uber.jaeger</groupId>
                <artifactId>jaeger-core</artifactId>
                <version>${com.uber.jaeger.version}</version>
            </dependency>
            <dependency>
                <groupId>com.uber.jaeger</groupId>
                <artifactId>jaeger-context</artifactId>
                <version>${com.uber.jaeger.version}</version>
            </dependency>
<!--            <dependency>
                <groupId>io.zipkin.reporter</groupId>
                <artifactId>zipkin-reporter</artifactId>
                <version>${io.zipkin.reporter.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.reporter</groupId>
                <artifactId>zipkin-sender-okhttp3</artifactId>
                <version>${io.zipkin.reporter.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.brave</groupId>
                <artifactId>brave</artifactId>
                <version>${io.zipkin.brave.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing.brave</groupId>
                <artifactId>brave-opentracing</artifactId>
                <version>${io.opentracing.brave.version}</version>
            </dependency>-->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>3.8.0</version>
            </dependency>

            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-runtime</artifactId>
                <version>${antlr.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.8.0</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>21.0</version>
            </dependency>

            <dependency>
                <groupId>com.github.mgunlogson</groupId>
                <artifactId>cuckoofilter4j</artifactId>
                <version>1.0.2</version>
            </dependency>

            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>1.17</version>
            </dependency>

            <dependency>
                <groupId>com.rethinkdb</groupId>
                <artifactId>rethinkdb-driver</artifactId>
                <version>2.3.3</version>
            </dependency>

            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-core</artifactId>
                <version>${org.apache.tika.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-parsers</artifactId>
                <version>${org.apache.tika.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-langdetect</artifactId>
                <version>${org.apache.tika.version}</version>
            </dependency>

            <dependency>
                <groupId>com.optimaize.languagedetector</groupId>
                <artifactId>language-detector</artifactId>
                <version>0.6</version>
            </dependency>

            <dependency>
                <groupId>dnsjava</groupId>
                <artifactId>dnsjava</artifactId>
                <version>2.1.8</version>
            </dependency>

            <!-- ARC/WARC libraries -->
            <dependency>
                <groupId>org.jwat</groupId>
                <artifactId>jwat-common</artifactId>
                <version>${org.jwat.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jwat</groupId>
                <artifactId>jwat-gzip</artifactId>
                <version>${org.jwat.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jwat</groupId>
                <artifactId>jwat-arc</artifactId>
                <version>${org.jwat.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jwat</groupId>
                <artifactId>jwat-warc</artifactId>
                <version>${org.jwat.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jwat</groupId>
                <artifactId>jwat-archive</artifactId>
                <version>${org.jwat.version}</version>
            </dependency>

            <!-- Configuration framework -->
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>1.3.1</version>
            </dependency>

            <dependency>
                <groupId>com.netflix.hystrix</groupId>
                <artifactId>hystrix-core</artifactId>
                <version>1.5.8</version>
            </dependency>

            <dependency>
                <groupId>it.sauronsoftware.cron4j</groupId>
                <artifactId>cron4j</artifactId>
                <version>2.2.5</version>
            </dependency>

            <dependency>
                <groupId>org.cache2k</groupId>
                <artifactId>cache2k-api</artifactId>
                <version>${cache2k-version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.cache2k</groupId>
                <artifactId>cache2k-all</artifactId>
                <version>${cache2k-version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>2.8.47</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Do all logging thru Log4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.21</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.8.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.19.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.23.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>appassembler-maven-plugin</artifactId>
                    <version>2.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-maven-plugin</artifactId>
                    <version>${antlr.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.khubla.antlr</groupId>
                    <artifactId>antlr4test-maven-plugin</artifactId>
                    <version>${antlr4test-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>

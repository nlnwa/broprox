# Broprox app for Kubernetes

apiVersion: v1
kind: Service
metadata:
  name: rethinkdb
  labels:
    app: rethinkdb
    tier: backend
    role: master
spec:
  ports:
    # the port that this service should serve on
  - port: 28015
    targetPort: 28015
    name: api
  - port: 8888
    targetPort: 8080
    nodePort: 30888
    name: webconsole
  selector:
    app: rethinkdb
    tier: backend
    role: master
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: rethinkdb
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: rethinkdb
        tier: backend
        role: master
    spec:
      containers:
      - name: rethinkdb
        image: rethinkdb:2.3
        ports:
        - containerPort: 28015
        - containerPort: 29015
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: broprox-harvester
  labels:
    app: harvester
    tier: backend
    role: master
spec:
  ports:
  - name: broprox-harvester-api
    port: 9090
    targetPort: 9090
  - name: broprox-harvester-proxy
    port: 8080
    targetPort: 8080
  - name: broprox-browser-api
    port: 9222
    targetPort: 9222
  selector:
    app: harvester
    tier: backend
    role: master
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: broprox-harvester
spec:
  template:
    metadata:
      labels:
        app: harvester
        tier: backend
        role: master
    spec:
      containers:
      - name: broprox-browser
        image: norsknettarkiv/chrome-headless
        ports:
        - containerPort: 9222
        env:
        - name: CHROME_OPTS
          value: "--proxy-server=localhost:8080 --ignore-certificate-errors --disable-web-security --allow-running-insecure-content"
        volumeMounts:
        - mountPath: /data
          name: workdir
      - name: broprox-harvester
        image: norsknettarkiv/broprox-harvester
        ports:
        - containerPort: 8080
        - containerPort: 9090
        env:
        - name: BROWSER_HOST
          value: "localhost"
        volumeMounts:
        - mountPath: /workdir
          name: workdir
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
      - emptyDir: {}
        name: workdir

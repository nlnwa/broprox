# Veidemann app for Kubernetes
kind: ConfigMap
apiVersion: v1
metadata:
  name: veidemann-properties
  labels:
    app: veidemann
    role: config
data:
  openid.connect.issuer: ""
  openid.connect.issuer.backend: "http://dex:5556/veidemann/dex"
  jaeger.sampler.type: "probabilistic"
  jaeger.sampler.param: "0.1"
  log4j2.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration status="WARN" monitorInterval="0">
        <Appenders>
            <Console name="Console" target="SYSTEM_OUT">
                <PatternLayout pattern="%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} [%thread] %-5level %logger{36} - %MDC %msg %ex{full}%n"/>
            </Console>
        </Appenders>
        <Loggers>
            <Logger name="no.nb.nna.veidemann" level="info" additivity="false">
                <AppenderRef ref="Console"/>
            </Logger>
            <Root level="error">
                <AppenderRef ref="Console"/>
            </Root>
        </Loggers>
    </Configuration>
  environment.json: |-
    {
      "apiGateway": "http://veidemann-api-gateway:30895/api",
      "auth": {
        "issuer": "",
        "requireHttps": false
      }
    }
---
# Harvester (proxy and browser)
apiVersion: v1
kind: Service
metadata:
  name: veidemann-harvester
  labels:
    app: veidemann
    component: harvester
    tier: backend
    role: worker
spec:
  ports:
  - name: grpc
    port: 9090
    targetPort: api
  - name: harvester-proxy
    port: 8080
    targetPort: proxy
  - name: browser-api
    port: 9222
    targetPort: debug
  selector:
    app: veidemann
    component: harvester
    tier: backend
    role: worker
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: veidemann-harvester
spec:
  replicas: 1
  selector:
    matchLabels:
      app: veidemann
      component: harvester
      tier: backend
      role: worker
  template:
    metadata:
      labels:
        app: veidemann
        component: harvester
        tier: backend
        role: worker
    spec:
      containers:
      - name: browser
        image: norsknettarkiv/chrome-headless:65.0.3322.3
        ports:
        - name: debug
          containerPort: 9222
        env:
        - name: CHROME_OPTS
          value: "--proxy-server=localhost:8080 --hide-scrollbars"
          # --disable-backgrond-networking
          # --disable-background-networking
        volumeMounts:
        - mountPath: /data
          name: workdir
        - mountPath: /dev/shm
          name: dshm
        resources:
            requests:
                memory: "500Mi"
      - name: proxy
        image: norsknettarkiv/veidemann-harvester:latest
        imagePullPolicy: Always
        ports:
        - name: proxy
          containerPort: 8080
        - name: api
          containerPort: 9090
        env:
        - name: BROWSER_HOST
          value: "localhost"
        - name: BROWSER_PORT
          value: "9222"
        - name: DB_HOST
          value: "rethink"
        - name: DB_PORT
          value: "28015"
        - name: CONTENT_WRITER_HOST
          value: "veidemann-contentwriter"
        - name: CONTENT_WRITER_PORT
          value: "8082"
        - name: DNS_RESOLVER_HOST
          value: "veidemann-dnsresolver"
        - name: DNS_RESOLVER_PORT
          value: "50052"
        - name: MAX_CACHE_OBJECT_SIZE
          value: 1B
        - name: JAEGER_SAMPLER_TYPE
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.type
        - name: JAEGER_SAMPLER_PARAM
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.param
        volumeMounts:
        - mountPath: /workdir
          name: workdir
        - name: log4j-config
          mountPath: /veidemann/config/log4j2.xml
          subPath: log4j2.xml
        resources:
            requests:
                memory: "500Mi"
      - image: jaegertracing/jaeger-agent:1.1.0
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        command:
        - "/go/bin/agent-linux"
        - "--collector.host-port=jaeger-collector.tracing:14267"
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
      - name: workdir
        emptyDir: {}
      - name: log4j-config
        configMap:
          name: veidemann-properties
          items:
          - key: log4j2.xml
            path: log4j2.xml
      - name: dshm
        emptyDir:
          medium: Memory
---
# Content writer
apiVersion: v1
kind: Service
metadata:
  name: veidemann-contentwriter
  labels:
    app: veidemann
    component: contentwriter
    tier: backend
    role: worker
spec:
  ports:
  - name: grpc
    port: 8082
    targetPort: 8082
    nodePort: 31575
  - name: explorer
    port: 8081
    targetPort: 8081
    nodePort: 31576
  selector:
    app: veidemann
    component: contentwriter
    tier: backend
    role: worker
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: veidemann-contentwriter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: veidemann
      component: contentwriter
      tier: backend
      role: worker
  template:
    metadata:
      labels:
        app: veidemann
        component: contentwriter
        tier: backend
        role: worker
    spec:
      containers:
      - name: contentwriter
        image: norsknettarkiv/veidemann-contentwriter:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8082
        env:
        - name: API_PORT
          value: "8082"
        - name: HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: WARC_WRITER_POOL_SIZE
          value: "6"
        - name: WARC_SIZE
          value: "1GiB"
        - name: WARC_COMPRESS
          value: "true"
        - name: DB_HOST
          value: "rethink"
        - name: DB_PORT
          value: "28015"
        - name: JAEGER_SAMPLER_TYPE
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.type
        - name: JAEGER_SAMPLER_PARAM
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.param
        volumeMounts:
        - mountPath: /workdir
          name: workdir
        - mountPath: /warcs
          name: warcs
        - name: log4j-config
          mountPath: /veidemann/config/log4j2.xml
          subPath: log4j2.xml
        resources:
            requests:
                memory: "1Gi"
      - name: contentexplorer
        image: norsknettarkiv/veidemann-contentexplorer:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
        env:
        - name: DB_HOST
          value: "rethink"
        - name: DB_PORT
          value: "28015"
        - name: JAEGER_SAMPLER_TYPE
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.type
        - name: JAEGER_SAMPLER_PARAM
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.param
        volumeMounts:
        - mountPath: /workdir
          name: workdir
        - mountPath: /warcs
          name: warcs
        - name: log4j-config
          mountPath: /veidemann/config/log4j2.xml
          subPath: log4j2.xml
      - image: jaegertracing/jaeger-agent:1.1.0
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        command:
        - "/go/bin/agent-linux"
        - "--collector.host-port=jaeger-collector.tracing:14267"
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
      - name: workdir
        emptyDir: {}
      - name: warcs
        emptyDir: {}
      - name: log4j-config
        configMap:
          name: veidemann-properties
          items:
          - key: log4j2.xml
            path: log4j2.xml

---
# Frontier
apiVersion: v1
kind: Service
metadata:
  name: veidemann-frontier
  labels:
    app: veidemann
    component: frontier
    tier: backend
    role: worker
spec:
  ports:
  - name: grpc
    port: 7700
    targetPort: 7700
  selector:
    app: veidemann
    component: frontier
    tier: backend
    role: worker
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: veidemann-frontier
spec:
  replicas: 1
  selector:
    matchLabels:
      app: veidemann
      component: frontier
      tier: backend
      role: worker
  template:
    metadata:
      labels:
        app: veidemann
        component: frontier
        tier: backend
        role: worker
    spec:
      containers:
      - name: frontier
        image: norsknettarkiv/veidemann-frontier:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 7700
        env:
        - name: DB_HOST
          value: "rethink"
        - name: DB_PORT
          value: "28015"
        - name: HARVESTER_HOST
          value: "veidemann-harvester"
        - name: HARVESTER_PORT
          value: "9090"
        - name: ROBOTS_EVALUATOR_HOST
          value: "veidemann-robots"
        - name: ROBOTS_EVALUATOR_PORT
          value: "50053"
        - name: DNS_RESOLVER_HOST
          value: "veidemann-dnsresolver"
        - name: DNS_RESOLVER_PORT
          value: "50052"
        volumeMounts:
        - mountPath: /workdir
          name: workdir
        - name: log4j-config
          mountPath: /veidemann/config/log4j2.xml
          subPath: log4j2.xml
      - image: jaegertracing/jaeger-agent:1.1.0
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        command:
        - "/go/bin/agent-linux"
        - "--collector.host-port=jaeger-collector.tracing:14267"
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
      - name: workdir
        emptyDir: {}
      - name: log4j-config
        configMap:
          name: veidemann-properties
          items:
          - key: log4j2.xml
            path: log4j2.xml

---
# Controller
apiVersion: v1
kind: Service
metadata:
  name: veidemann-controller
  labels:
    app: veidemann
    component: controller
    tier: backend
    role: master
spec:
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
    nodePort: 30891
  selector:
    app: veidemann
    component: controller
    tier: backend
    role: master
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: veidemann-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: veidemann
      component: controller
      tier: backend
      role: master
  template:
    metadata:
      labels:
        app: veidemann
        component: controller
        tier: backend
        role: master
    spec:
      containers:
      - name: controller
        image: norsknettarkiv/veidemann-controller:latest
        ports:
        - containerPort: 50051
        env:
        - name: DB_HOST
          value: "rethink"
        - name: DB_PORT
          value: "28015"
        - name: FRONTIER_HOST
          value: "veidemann-frontier"
        - name: FRONTIER_PORT
          value: "7700"
        - name: OPENID_CONNECT_ISSUER
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: openid.connect.issuer
        - name: JAEGER_SAMPLER_TYPE
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.type
        - name: JAEGER_SAMPLER_PARAM
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.param
        volumeMounts:
        - name: log4j-config
          mountPath: /veidemann/config/log4j2.xml
          subPath: log4j2.xml
      - image: jaegertracing/jaeger-agent:1.1.0
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        command:
        - "/go/bin/agent-linux"
        - "--collector.host-port=jaeger-collector.tracing:14267"
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
      - name: log4j-config
        configMap:
          name: veidemann-properties
          items:
          - key: log4j2.xml
            path: log4j2.xml

---
# Veidemann Robots honoring service
apiVersion: v1
kind: Service
metadata:
  name: veidemann-robots
  labels:
    app: veidemann
    component: robots
    tier: backend
    role: worker
spec:
  ports:
  - name: grpc
    port: 50053
    targetPort: 50053
  selector:
    app: veidemann
    component: robots
    tier: backend
    role: worker
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: veidemann-robots
spec:
  replicas: 1
  selector:
    matchLabels:
      app: veidemann
      component: robots
      tier: backend
      role: worker
  template:
    metadata:
      labels:
        app: veidemann
        component: robots
        tier: backend
        role: worker
    spec:
      containers:
      - name: robots
        image: norsknettarkiv/veidemann-robotsevaluator-service:latest
        ports:
        - containerPort: 50053
        env:
        - name: DB_HOST
          value: "rethink"
        - name: DB_PORT
          value: "28015"
        - name: PROXY_HOST
          value: "veidemann-harvester"
        - name: PROXY_PORT
          value: "8080"
        - name: JAEGER_SAMPLER_TYPE
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.type
        - name: JAEGER_SAMPLER_PARAM
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.param
        volumeMounts:
        - name: log4j-config
          mountPath: /veidemann/config/log4j2.xml
          subPath: log4j2.xml
      - image: jaegertracing/jaeger-agent:1.1.0
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        command:
        - "/go/bin/agent-linux"
        - "--collector.host-port=jaeger-collector.tracing:14267"
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
      - name: log4j-config
        configMap:
          name: veidemann-properties
          items:
          - key: log4j2.xml
            path: log4j2.xml

---
# Veidemann DNS resolver service
apiVersion: v1
kind: Service
metadata:
  name: veidemann-dnsresolver
  labels:
    app: veidemann
    component: dnsresolver
    tier: backend
    role: worker
spec:
  ports:
  - name: grpc
    port: 50052
    targetPort: 50052
  selector:
    app: veidemann
    component: dnsresolver
    tier: backend
    role: worker
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: veidemann-dnsresolver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: veidemann
      component: dnsresolver
      tier: backend
      role: worker
  template:
    metadata:
      labels:
        app: veidemann
        component: dnsresolver
        tier: backend
        role: worker
    spec:
      containers:
      - name: dnsresolver
        image: norsknettarkiv/veidemann-dnsresolver:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 50052
        env:
        - name: DB_HOST
          value: "rethink"
        - name: DB_PORT
          value: "28015"
        - name: CONTENT_WRITER_HOST
          value: "veidemann-contentwriter"
        - name: CONTENT_WRITER_PORT
          value: "8082"
        - name: DNS_SERVER
          value: "8.8.8.8"
        - name: JAEGER_SAMPLER_TYPE
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.type
        - name: JAEGER_SAMPLER_PARAM
          valueFrom:
            configMapKeyRef:
              name: veidemann-properties
              key: jaeger.sampler.param
        volumeMounts:
        - name: log4j-config
          mountPath: /veidemann/config/log4j2.xml
          subPath: log4j2.xml
      - image: jaegertracing/jaeger-agent:1.1.0
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        command:
        - "/go/bin/agent-linux"
        - "--collector.host-port=jaeger-collector.tracing:14267"
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
      - name: log4j-config
        configMap:
          name: veidemann-properties
          items:
          - key: log4j2.xml
            path: log4j2.xml

---
# API Gateway
apiVersion: v1
kind: Service
metadata:
  name: veidemann-api-gateway
  labels:
    app: veidemann
    component: api-gateway
    tier: frontend
    role: api-gateway
spec:
  ports:
  - port: 3010
    targetPort: 3010
    nodePort: 30895
  selector:
    app: veidemann
    component: api-gateway
    tier: frontend
    role: api-gateway
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: veidemann-api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: veidemann
      component: api-gateway
      tier: frontend
      role: api-gateway
  template:
    metadata:
      labels:
        app: veidemann
        component: api-gateway
        tier: frontend
        role: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: norsknettarkiv/veidemann-api-gateway:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3010
        env:
        - name: GRPC_CONTROLLER
          value: "veidemann-controller:50051"
        livenessProbe:
          httpGet:
            path: /api/healthz
            port: 3010
          initialDelaySeconds: 10
          periodSeconds: 10
      restartPolicy: Always
      dnsPolicy: ClusterFirst

---
# Admin GUI
apiVersion: v1
kind: Service
metadata:
  name: veidemann-admin
  labels:
    app: veidemann
    component: admin
    tier: frontend
    role: admin
spec:
  ports:
  - name: gui
    port: 80
    targetPort: 80
    nodePort: 30890
  selector:
    app: veidemann
    component: admin
    tier: frontend
    role: admin
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: veidemann-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: veidemann
      component: admin
      tier: frontend
      role: admin
  template:
    metadata:
      labels:
        app: veidemann
        component: admin
        tier: frontend
        role: admin
    spec:
      containers:
      - name: admin
        image: norsknettarkiv/veidemann-gui:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config-volume
          mountPath: /usr/share/nginx/html/veidemann/assets/config/
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
      - name: config-volume
        configMap:
          name: veidemann-properties
          items:
          - key: environment.json
            path: environment.json

# Broprox app for Kubernetes

# Rethink DB
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: rethinkdb
    tier: backend
    role: master
spec:
  ports:
  - name: api
    port: 28015
    targetPort: 28015
  - name: intracluster
    port: 29015
    targetPort: 29015
  - name: webconsole
    port: 8888
    targetPort: 8080
    nodePort: 30888
  selector:
    app: rethinkdb
    tier: backend
    role: master
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: rethinkdb
        tier: backend
        role: master
    spec:
      containers:
      - name: rethinkdb
        image: rethinkdb:2.3
        ports:
        - containerPort: 28015
        - containerPort: 29015
        - containerPort: 8080

---
# Harvester (proxy and browser)
apiVersion: v1
kind: Service
metadata:
  name: harvester
  labels:
    app: harvester
    tier: backend
    role: worker
spec:
  ports:
  - name: harvester-api
    port: 9090
    targetPort: api
  - name: harvester-proxy
    port: 8080
    targetPort: proxy
  - name: browser-api
    port: 9222
    targetPort: debug
  selector:
    app: harvester
    tier: backend
    role: worker
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: harvester
spec:
  template:
    metadata:
      labels:
        app: harvester
        tier: backend
        role: worker
    spec:
      containers:
      - name: browser
        image: norsknettarkiv/chrome-headless
        ports:
        - name: debug
          containerPort: 9222
        env:
        - name: CHROME_OPTS
          value: "--proxy-server=localhost:8080 --ignore-certificate-errors --disable-web-security --allow-running-insecure-content"
        volumeMounts:
        - mountPath: /data
          name: workdir
      - name: proxy
        image: norsknettarkiv/broprox-harvester
        ports:
        - name: proxy
          containerPort: 8080
        - name: api
          containerPort: 9090
        env:
        - name: BROWSER_HOST
          value: "localhost"
        - name: BROWSER_PORT
          value: "9222"
        - name: DB_HOST
          value: "db"
        - name: DB_PORT
          value: "28015"
        - name: CONTENT_WRITER_HOST
          value: "content-writer"
        - name: CONTENT_WRITER_PORT
          value: "8080"
        - name: DNS_RESOLVER_HOST
          value: "dnsservice"
        - name: DNS_RESOLVER_PORT
          value: "50052"
        - name: TRACER_URI
          value: "http://tracer:9411/api/v1/spans"
        volumeMounts:
        - mountPath: /workdir
          name: workdir
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
      - emptyDir: {}
        name: workdir

---
# Content writer
apiVersion: v1
kind: Service
metadata:
  name: content-writer
  labels:
    app: content-writer
    tier: backend
    role: worker
spec:
  ports:
  - name: api
    port: 8080
    targetPort: 8080
    nodePort: 31575
  selector:
    app: content-writer
    tier: backend
    role: worker
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: content-writer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: content-writer
        tier: backend
        role: worker
    spec:
      containers:
      - name: content-writer
        image: norsknettarkiv/broprox-contentwriter-service
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: "db"
        - name: DB_PORT
          value: "28015"
        - name: TRACER_URI
          value: "http://tracer:9411/api/v1/spans"
        volumeMounts:
        - mountPath: /workdir
          name: workdir
        - mountPath: /warcs
          name: warcs
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
      - emptyDir: {}
        name: workdir
      - emptyDir: {}
        name: warcs

---
# Frontier
apiVersion: v1
kind: Service
metadata:
  name: frontier
  labels:
    app: frontier
    tier: backend
    role: worker
spec:
  ports:
  - name: api
    port: 7700
    targetPort: 7700
  selector:
    app: frontier
    tier: backend
    role: worker
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: frontier
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: frontier
        tier: backend
        role: worker
    spec:
      containers:
      - name: frontier
        image: norsknettarkiv/broprox-frontier
        ports:
        - containerPort: 7700
        env:
        - name: DB_HOST
          value: "db"
        - name: DB_PORT
          value: "28015"
        - name: HARVESTER_HOST
          value: "harvester"
        - name: HARVESTER_PORT
          value: "9090"
        - name: ROBOTS_EVALUATOR_HOST
          value: "robots"
        - name: ROBOTS_EVALUATOR_PORT
          value: "50052"
        - name: DNS_RESOLVER_HOST
          value: "dnsservice"
        - name: DNS_RESOLVER_PORT
          value: "50052"
        - name: TRACER_URI
          value: "http://tracer:9411/api/v1/spans"
        volumeMounts:
        - mountPath: /workdir
          name: workdir
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
      - emptyDir: {}
        name: workdir

---
# Controller
apiVersion: v1
kind: Service
metadata:
  name: controller
  labels:
    app: controller
    tier: backend
    role: master
spec:
  ports:
  - name: api
    port: 50051
    targetPort: 50051
    nodePort: 30891
  selector:
    app: controller
    tier: backend
    role: master
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: controller
        tier: backend
        role: master
    spec:
      containers:
      - name: controller
        image: norsknettarkiv/broprox-controller
        ports:
        - containerPort: 50051
        env:
        - name: DB_HOST
          value: "db"
        - name: DB_PORT
          value: "28015"
        - name: FRONTIER_HOST
          value: "frontier"
        - name: FRONTIER_PORT
          value: "7700"
        - name: TRACER_URI
          value: "http://tracer:9411/api/v1/spans"
      restartPolicy: Always
      dnsPolicy: ClusterFirst

---
# Broprox Robots honoring service
apiVersion: v1
kind: Service
metadata:
  name: robots
  labels:
    app: robots
    tier: backend
    role: worker
spec:
  ports:
  - name: api
    port: 50052
    targetPort: 50052
  selector:
    app: robots
    tier: backend
    role: worker
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: robots
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: robots
        tier: backend
        role: worker
    spec:
      containers:
      - name: robots
        image: norsknettarkiv/broprox-robotrules-service
        ports:
        - containerPort: 50052
        env:
        - name: DB_HOST
          value: "db"
        - name: DB_PORT
          value: "28015"
        - name: PROXY_HOST
          value: "harvester"
        - name: PROXY_PORT
          value: "8080"
        - name: TRACER_URI
          value: "http://tracer:9411/api/v1/spans"
      restartPolicy: Always
      dnsPolicy: ClusterFirst

---
# Broprox DNS resolver service
apiVersion: v1
kind: Service
metadata:
  name: dnsservice
  labels:
    app: dnsservice
    tier: backend
    role: worker
spec:
  ports:
  - name: api
    port: 50052
    targetPort: 50052
  selector:
    app: dnsservice
    tier: backend
    role: worker
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: dnsservice
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: dnsservice
        tier: backend
        role: worker
    spec:
      containers:
      - name: robots
        image: norsknettarkiv/broprox-dns-service
        ports:
        - containerPort: 50052
        env:
        - name: DB_HOST
          value: "db"
        - name: DB_PORT
          value: "28015"
        - name: CONTENT_WRITER_HOST
          value: "content-writer"
        - name: CONTENT_WRITER_PORT
          value: "8080"
        - name: DNS_SERVER
          value: "8.8.8.8"
        - name: TRACER_URI
          value: "http://tracer:9411/api/v1/spans"
      restartPolicy: Always
      dnsPolicy: ClusterFirst

---
# Zipkin log trace server
apiVersion: v1
kind: Service
metadata:
  name: tracer
  labels:
    app: tracer
    tier: backend
    role: log
spec:
  ports:
  - name: api
    port: 9411
    targetPort: 9411
    nodePort: 30889
  selector:
    app: tracer
    tier: backend
    role: log
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: tracer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: tracer
        tier: backend
        role: log
    spec:
      containers:
      - name: tracer
        image: openzipkin/zipkin
        ports:
        - containerPort: 9411
      restartPolicy: Always
      dnsPolicy: ClusterFirst

---
# Admin GUI
apiVersion: v1
kind: Service
metadata:
  name: admin
  labels:
    app: admin
    tier: frontend
    role: admin
spec:
  ports:
  - name: gui
    port: 80
    targetPort: 3010
    nodePort: 30890
  selector:
    app: admin
    tier: frontend
    role: admin
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: admin
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: admin
        tier: frontend
        role: admin
    spec:
      containers:
      - name: admin
        image: norsknettarkiv/broprox-gui
        ports:
        - containerPort: 3010
        env:
        - name: grpc_controller
          value: "controller:50051"
      restartPolicy: Always
      dnsPolicy: ClusterFirst

---
# Test web server and dns
apiVersion: v1
kind: Service
metadata:
  name: testsites
  labels:
    app: testsites
    tier: backend
    role: test
spec:
  ports:
  - name: http
    port: 80
    targetPort: http
    nodePort: 30980
  - name: dns
    port: 53
    targetPort: dns
    protocol: UDP
    nodePort: 30953
  selector:
    app: testsites
    tier: backend
    role: test
  type: NodePort
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: testsites
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: testsites
        tier: backend
        role: test
    spec:
      containers:
      - name: testsites
        image: norsknettarkiv/testsites
        ports:
        - name: http
          containerPort: 80
        - name: dns
          containerPort: 53
          protocol: UDP
        env:
        - name: HOST
          value: "testsites"
      restartPolicy: Always
      dnsPolicy: ClusterFirst
